---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: open-webui
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      open-webui:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: 0.6.21@sha256:173f29b0ec706547904b25cc91c713c9bddb42262a8f454a95c61d152e474ce5
            env:
              # Image Generation
              # ENABLE_OPENAI_API: False
              # ENABLE_OLLAMA_API: True
              # ENABLE_IMAGE_GENERATION: True
              # IMAGE_GENERATION_ENGINE: automatic1111
              # IMAGE_GENERATION_MODEL: dreamshaper_8
              # IMAGE_SIZE: 400x400
              # IMAGE_STEPS: 8
              # AUTOMATIC1111_BASE_URL: http://sdnext:7860/
              # AUTOMATIC1111_CFG_SCALE: 2
              # AUTOMATIC1111_SAMPLER: DPM++ SDE
              # AUTOMATIC1111_SCHEDULER: Karras
              # Open-webui settings
              OLLAMA_BASE_URL: http://10.30.2.10:11434
              ENABLE_OLLAMA_API: true
              # ENABLE_RAG_WEB_SEARCH: true
              # ENABLE_SEARCH_QUERY: true
              # RAG_WEB_SEARCH_ENGINE: searxng
              # SEARXNG_QUERY_URL: http://searxng:8080/search?q=<query>
              # ENABLE_WEBSOCKET_SUPPORT: "true"
              # WEBSOCKET_MANAGER: "redis"
              # WEBSOCKET_REDIS_URL: "redis://{{ .Release.Name }}-dragonfly:6379"
              # DATABASE_URL:
              #  valueFrom:
              #    secretKeyRef:
              #      name: "{{ .Release.Name }}-pguser-{{ .Release.Name }}"
              #      key: pgbouncer-uri
            #envFrom:
            #  - secretRef:
            #      name: "{{ .Release.Name }}"
            resources:
              requests:
                cpu: 500m
              limits:
                memory: 2Gi
    service:
      app:
        controller: open-webui
        ports:
          http:
            port: &port 8080
    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.ewatkins.dev"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.ingress.kubernetes.io/server-snippets: |
            location / {
              proxy_set_header Upgrade $http_upgrade;
              proxy_http_version 1.1;
              proxy_set_header X-Forwarded-Host $http_host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Forwarded-For $remote_addr;
              proxy_set_header Host $host;
              proxy_set_header Connection "upgrade";
              proxy_cache_bypass $http_upgrade;
            }
        hosts:
          - host: "chat.ewatkins.dev"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: open-webui-config
        globalMounts:
          - path: /app/backend/data
