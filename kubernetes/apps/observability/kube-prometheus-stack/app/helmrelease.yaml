---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 69.7.4
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: openebs
      namespace: storage
    - name: thanos
      namespace: observability
  valuesFrom:
    - kind: ConfigMap
      name: kube-state-metrics-config
      valuesKey: kube-state-metrics.yaml
  values:
    ## ref: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
    fullnameOverride: kps
    cleanPrometheusOperatorObjectNames: true

    crds:
      enabled: true

    alertmanager:
      enabled: true
      fullnameOverride: alertmanager

      alertmanagerSpec:
        replicas: 2
        retention: 72h
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 1Gi
        useExistingSecret: true
        configSecret: alertmanager-secret
        resources:
          requests:
            cpu: 11m
            memory: 53M
          limits:
            memory: 53M

      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
           nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - alerts.ewatkins.dev

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: [__name__]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: [__name__]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: [__name__]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 10.30.4.1
        - 10.30.4.2
        - 10.30.4.3

    kubeEtcd:
      enabled: true
      endpoints: *cp
      service:
        enabled: true
        port: 2381
        targetPort: 2381
      serviceMonitor:
        metricRelabelings:
          - action: drop
            sourceLabels: ["__name__"]
            regex: (etcd_request_duration_seconds_bucket|etcd_request_duration_seconds_sum|etcd_request_duration_seconds_count)

    kubeScheduler:
      enabled: true
      endpoints: *cp

    kubeProxy:
      enabled: false

    prometheus:
      enabled: true
      fullNameOverride: prometheus

      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
        hosts:
          - &host prometheus.ewatkins.dev
        pathType: Prefix

      thanosService:
        enabled: true

      thanosServiceMonitor:
        enabled: true

      prometheusSpec:
        podMetadata:
          annotations:
            secret.reloader.stakater.com/reload: &secret minio-thanos-secret
        replicas: 1
        replicaExternalLabelName: __replica__
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomemlimit
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        image:
          registry: quay.io
          repository: prometheus/prometheus
          tag: v2.54.0-dedupelabels
        thanos:
          image: quay.io/thanos/thanos:${THANOS_VERSION}
          version: ${THANOS_VERSION#v}
          objectStorageConfig:
            type: S3
            config:
              bucket: thanos
              endpoint: minio.storage.svc.cluster.local:9000
              region: us-east-1
              access_key:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: accesskey
              secret_key:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: secretkey
        retention: 2d
        retentionSize: 8GiB
        externalLabels:
          cluster: talos-cluster
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 1500Mi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 10Gi

        podAntiAffinity: soft
        podAntiAffinityTopologyKey: kubernetes.io/hostname
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        additionalScrapeConfigsSecret:
          enabled: false
          # name: prometheus-additional-scrape-configs
          # key: additionalScrapeConfigs

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node

    prometheusOperator:
      resources:
        requests:
          cpu: 50m
          memory: 256M
        limits:
          memory: 384M

    kube-state-metrics:
      enabled: true
      # Config specified in ./resources/kube-state-metrics.yaml

    grafana:
      enabled: false # manage by itself
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Prometheus
          multicluster:
            etcd:
              enabled: true
