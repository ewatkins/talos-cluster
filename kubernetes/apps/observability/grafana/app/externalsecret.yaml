apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name grafana-secret
  namespace: observability
spec:
  refreshInterval: 15m
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden-secrets-manager
  target:
    name: *name
    template:
      engineVersion: v2
      metadata:
        annotations:
          reloader.stakater.com/match: "true"
      data:
        # Database Init
        # INIT_POSTGRES_DBNAME: "{{ .GRAFANA_DB }}"
        # INIT_POSTGRES_HOST: "{{ .host }}"
        # INIT_POSTGRES_USER: "{{ .GRAFANA_USER }}"
        # INIT_POSTGRES_PASS: "{{ .GRAFANA_PASS }}"
        # INIT_POSTGRES_SUPER_PASS: "{{ .password }}"

        # Grafana Config
        GF_AUTH_GENERIC_OAUTH_ENABLED: "{{ .GF_AUTH_GENERIC_OAUTH_ENABLED }}"
        GF_AUTH_GENERIC_OAUTH_NAME: "{{ .GF_AUTH_GENERIC_OAUTH_NAME }}"
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{ .GF_AUTH_GENERIC_OAUTH_CLIENT_ID }}"
        GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{ .GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET }}"
        GF_AUTH_GENERIC_OAUTH_SCOPES: "{{ .GF_AUTH_GENERIC_OAUTH_SCOPES }}"
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: "{{ .GF_AUTH_GENERIC_OAUTH_AUTH_URL }}"
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "{{ .GF_AUTH_GENERIC_OAUTH_TOKEN_URL }}"
        GF_AUTH_GENERIC_OAUTH_API_URL: "{{ .GF_AUTH_GENERIC_OAUTH_API_URL }}"
        GF_AUTH_SIGNOUT_REDIRECT_URL: "{{ .GF_AUTH_SIGNOUT_REDIRECT_URL }}"
        GF_AUTH_OAUTH_AUTO_LOGIN: "{{ .GF_AUTH_OAUTH_AUTO_LOGIN }}"
        GF_AUTH_DISABLE_LOGIN_FORM: "{{ .GF_AUTH_DISABLE_LOGIN_FORM }}"
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "{{ .GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH }}"
        GF_SERVER_ROOT_URL: "{{ .GF_SERVER_ROOT_URL }}"
        GF_DATABASE_SSL_MODE: "{{ .GF_DATABASE_SSL_MODE }}"
        GF_DATABASE_TYPE: "{{ .GF_DATABASE_TYPE }}"
        GF_SECURITY_ADMIN_USER: "{{ .GF_SECURITY_ADMIN_USER }}"
        GF_SECURITY_ADMIN_PASSWORD: "{{ .GF_SECURITY_ADMIN_PASSWORD }}"
  dataFrom:
    - extract:
        key: *name
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &name grafana-db-secret
  namespace: observability
spec:
  refreshInterval: 15m
  secretStoreRef:
    kind: ClusterSecretStore
    name: crunchy-postgres
  target:
    name: *name
    template:
      engineVersion: v2
      metadata:
        annotations:
          reloader.stakater.com/match: "true"
      data:
        # Grafana DB
        GF_DATABASE_NAME: '{{ index . "dbname" }}'
        GF_DATABASE_HOST: '{{ index . "pgbouncer-host" }}'
        GF_DATABASE_USER: '{{ index . "user" }}'
        GF_DATABASE_PASSWORD: '{{ index . "password" }}'
        GF_DATABASE_PORT: '{{ index . "pgbouncer-port" }}'
  dataFrom:
    - extract:
        key: crunchy-postgres-pguser-grafana-admin
