---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: &app postgres16
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:16.6-34
  instances: 3
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover

  postgresql:
    parameters:
      max_connections: "400"
      shared_buffers: 256MB
      timezone: "America/Chicago"

  enableSuperuserAccess: true
  superuserSecret:
    name: postgres-superuser

  storage:
    size: 25Gi
    storageClass: openebs-hostpath
    resizeInUseVolumes: False

  resources:
    requests:
      cpu: 500m
    limits:
      memory: 4Gi

  affinity:
    enablePodAntiAffinity: true
    podAntiAffinityType: preferred
    topologyKey: kubernetes.io/hostname
    additionalPodAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: postgresql
                operator: Exists
                values: []
          topologyKey: "kubernetes.io/hostname"

  monitoring:
    enablePodMonitor: true

  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: false

  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: https://s3.ewatkins.dev
      # Note: serverName version needs to be inclemented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres16-v6
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster postgres16-v5
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster
